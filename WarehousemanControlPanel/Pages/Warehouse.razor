@page "/warehouse"

@using ProductShopLibrary.Products
@using WarehousemanControlPanel.Services

@inject WarehouseService warehouseService

<table class="table">
	<thead>
		<tr>
			<th>Наименование</th>
			<th>Остаток</th>
			<th>Кол-во для пополнения</th>
		</tr>
	</thead>
	<tbody>
		@if (warehouseService.EndingProducts != null && warehouseService.EndingProducts.Any())
		{
			foreach (Product product in warehouseService.EndingProducts)
			{
				<tr>
					<td>@product.Name</td>
					<td>@product.QuantityInStock</td>
					<td><input type="number" width="200" min="0" max="1000" @onchange="(eventArgs) => ChangeProductsToSupply(product, eventArgs)"/></td>
				</tr>
			}

			<button type="button" class="btn btn-primary" @onclick="async () => await SupplyProducts()">Пополнить остатки</button>
		}
		else
		{
			<h2>Склад полон!</h2>
		}
	</tbody>
</table>

@code
{
	private Dictionary<Product, int> productsToSupply;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		productsToSupply = new Dictionary<Product, int>();
		warehouseService.OnEndingProductsUpdated += OnEndingProductsUpdated;
	}

	private void OnEndingProductsUpdated()
	{
		InvokeAsync(() => StateHasChanged());
	}

	private void ChangeProductsToSupply(Product product, ChangeEventArgs changeEventArgs)
	{
		if (changeEventArgs == null)
			return;

		productsToSupply[product] = Convert.ToInt32(changeEventArgs.Value);
	}

	private async Task SupplyProducts()
	{

	}
}